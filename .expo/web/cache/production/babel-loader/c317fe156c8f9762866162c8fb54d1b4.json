{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useRoute;var React=_interopRequireWildcard(require(\"react\"));var _NavigationRouteContext=_interopRequireDefault(require(\"./NavigationRouteContext\"));function useRoute(){var route=React.useContext(_NavigationRouteContext.default);if(route===undefined){throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");}return route;}","map":{"version":3,"sources":["useRoute.tsx"],"names":["route","React"],"mappings":"0PAAA,oDAEA,wFAQe,QAAA,CAAA,QAAA,EAER,CACL,GAAMA,CAAAA,KAAK,CAAGC,KAAK,CAALA,UAAAA,CAAd,+BAAcA,CAAd,CAEA,GAAID,KAAK,GAAT,SAAA,CAAyB,CACvB,KAAM,IAAA,CAAA,KAAA,CAAN,iFAAM,CAAN,CAGD,CAED,MAAA,CAAA,KAAA,CACD","sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<\n  T extends RouteProp<ParamListBase, string>\n>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]},"metadata":{},"sourceType":"script"}