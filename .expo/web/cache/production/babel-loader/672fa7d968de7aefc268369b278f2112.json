{
  "ast": null,
  "code": "Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _reactNative=require(\"react-native\");var _browser=require(\"./environment/browser\");var Platform={OS:_reactNative.Platform.OS,select:_reactNative.Platform.select,isDOMAvailable:_browser.isDOMAvailable,canUseEventListeners:_browser.canUseEventListeners,canUseViewport:_browser.canUseViewport};var _default=Platform;exports.default=_default;",
  "map": {
    "version": 3,
    "sources": ["../src/Platform.ts"],
    "names": [],
    "mappings": "gFAAA,yCAEA,8CAMA,GAAM,CAAA,QAAQ,CAAG,CAKf,EAAE,CAAE,sBAAoB,EALT,CAcf,MAAM,CAAE,sBAAoB,MAdb,CAmBf,cAAc,CAAd,uBAnBe,CAyBf,oBAAoB,CAApB,6BAzBe,CA+Bf,cAAc,CAAd,uBA/Be,CAAjB,C,aAkCe,Q",
    "sourcesContent": [
      "import { Platform as ReactNativePlatform, PlatformOSType } from 'react-native';\n\nimport { isDOMAvailable, canUseEventListeners, canUseViewport } from './environment/browser';\n\nexport type PlatformSelectOSType = PlatformOSType | 'native' | 'electron' | 'default';\n\nexport type PlatformSelect = <T>(specifics: { [platform in PlatformSelectOSType]?: T }) => T;\n\nconst Platform = {\n  /**\n   * Denotes the currently running platform.\n   * Can be one of ios, android, web.\n   */\n  OS: ReactNativePlatform.OS,\n  /**\n   * Returns the value with the matching platform.\n   * Object keys can be any of ios, android, native, web, default.\n   *\n   * @ios ios, native, default\n   * @android android, native, default\n   * @web web, default\n   */\n  select: ReactNativePlatform.select as PlatformSelect,\n  /**\n   * Denotes if the DOM API is available in the current environment.\n   * The DOM is not available in native React runtimes and Node.js.\n   */\n  isDOMAvailable,\n  /**\n   * Denotes if the current environment can attach event listeners\n   * to the window. This will return false in native React\n   * runtimes and Node.js.\n   */\n  canUseEventListeners,\n  /**\n   * Denotes if the current environment can inspect properties of the\n   * screen on which the current window is being rendered. This will\n   * return false in native React runtimes and Node.js.\n   */\n  canUseViewport,\n};\n\nexport default Platform;\n"
    ],
    "sourceRoot": ""
  },
  "metadata": {},
  "sourceType": "script"
}
